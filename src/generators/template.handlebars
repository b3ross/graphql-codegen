/**
 * This is a generated file.  Please do not edit.
 */
import { Enum } from 'typescript-string-enums';

/* tslint:disable */
{{#each classes}}
{{#each directives}}
@{{name}}({{#each arguments}}'{{value}}'{{#unless @last}},{{/unless}}{{/each}})
{{/each}}
export interface {{name}} {
{{#each fields}}
  {{#each directives}}
  @{{name}}({{#each arguments}}'{{value}}'{{#unless @last}},{{/unless}}{{/each}})
  {{/each}}
  {{name}}: {{mapType type.name}}{{#if type.isList}}[]{{/if}}{{#unless type.isNonNull}} | null {{/unless}};
{{/each}}
}

{{/each}}

{{#each enums}}
export type {{name}} = Enum<typeof {{name}}>;
export const {{name}} = Enum(
  {{#each values}}
  '{{mapEnumeration ../name this}}': '{{this}}'{{#unless @last}},{{/unless}}
  {{/each}}
);

{{/each}}
/* tslint:enable */


